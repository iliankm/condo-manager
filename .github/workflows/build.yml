name: Build

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Compile, code linting, package and build docker image
      run: ./mvnw -B verify -DskipTests
    - name: Save docker image to file
      run: docker save condo-manager:latest > /tmp/condo-manager-image.tar
    - name: Upload docker image file
      uses: actions/upload-artifact@v3
      with:
        name: condo-manager-image
        path: /tmp/condo-manager-image.tar

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: maven
        - name: Run unit tests
          run: ./mvnw -B verify -DskipITs -Ddetekt.skip -DskipBuildDocker
        - name: Add coverage to PR
          if: github.event_name == 'pull_request'
          uses: madrapps/jacoco-report@v1.6.1
          with:
            paths: |
              ${{ github.workspace }}/**/target/site/jacoco/jacoco.xml
            token: ${{ secrets.GITHUB_TOKEN }}
            min-coverage-overall: 80
            min-coverage-changed-files: 80
            title: Code Coverage for unit tests
            update-comment: true

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Download docker image file
        uses: actions/download-artifact@v3
        with:
          name: condo-manager-image
          path: /tmp
      - name: Load docker image
        run: docker load < /tmp/condo-manager-image.tar
      - name: Run integration tests
        run: ./mvnw -B verify -DskipUTs -Ddetekt.skip -DskipBuildDocker
      - name: Add coverage to PR
        if: github.event_name == 'pull_request'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: |
            ${{ github.workspace }}/**/condo-manager-integration-test/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: Code Coverage for integration tests
          update-comment: true
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          images: 'condo-manager'
          dest: 'logs/integration-test'
      - name: Upload container logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: integration-tests-container-logs
          path: logs/integration-test/*
  publish-docker-image:
    name: Publish docker image
    needs: [build, unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.branch-name.outputs.current_branch }}
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download docker image file
        uses: actions/download-artifact@v3
        with:
          name: condo-manager-image
          path: /tmp
      - name: Tag docker image and push it to registry
        run: |
          branch=${{ steps.branch-name.outputs.current_branch }}
          version=$branch
          if [[ "$branch" == "main" ]]; then
            version="latest"
          fi
          if [[ "$branch" == "release" ]]; then
            version=`./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout`
          fi
          imageName=ghcr.io/iliankm/condo-manager/condo-manager:$version
          docker load < /tmp/condo-manager-image.tar
          docker tag condo-manager:latest $imageName
          docker push $imageName
